class Маршрут:
    def __init__(self, старт, фініш, *довжини_переходів):
        self.старт = старт
        self.фініш = фініш
        self.довжини_переходів = list(довжини_переходів)

    def __str__(self):
        return (f"Маршрут: {self.старт} -> {self.фініш}, "
                f"Довжина: {self.загальна_довжина()} км, "
                f"Привали: {self.кількість_привалів()}")

    def загальна_довжина(self):
        return sum(self.довжини_переходів)

    def кількість_привалів(self):
        return len(self.довжини_переходів) - 1

    def найдовший_перехід(self):
        return max(self.довжини_переходів, default=0)

    # Перевантаження операторів порівняння за загальною довжиною маршруту
    def __lt__(self, other):
        return self.загальна_довжина() < other.загальна_довжина()

    def __le__(self, other):
        return self.загальна_довжина() <= other.загальна_довжина()

    def __gt__(self, other):
        return self.загальна_довжина() > other.загальна_довжина()

    def __ge__(self, other):
        return self.загальна_довжина() >= other.загальна_довжина()

    def __eq__(self, other):
        return self.загальна_довжина() == other.загальна_довжина()



маршрути = [
    Маршрут("Кваси", "Дземброня", 8, 8, 12, 18, 12),
    Маршрут("Львів", "Славське", 15, 10, 5, 20),
    Маршрут("Татарів", "Говерла", 10, 10, 15, 10),
    Маршрут("Івано-Франківськ", "Буковель", 25, 20, 30),
    Маршрут("Рахів", "Ясіня", 7, 14, 7),
    Маршрут("Косів", "Верховина", 10, 10, 15),
    Маршрут("Драгобрат", "Говерла", 12, 18, 12),
    Маршрут("Ужгород", "Мукачево", 20, 10, 30, 25),
    Маршрут("Чернівці", "Хотин", 10, 20, 30),
    Маршрут("Трускавець", "Моршин", 12, 18, 24, 30),
]


маршрути.sort()


def маршрути_з_максимальною_кількістю_привалів(маршрути):
    max_привалів = max(маршрути, key=lambda x: x.кількість_привалів()).кількість_привалів()
    return [маршрут for маршрут in маршрути if маршрут.кількість_привалів() == max_привалів]

def маршрут_з_найдовшим_переходом(маршрути):
    return max(маршрути, key=lambda x: x.найдовший_перехід())

def маршрути_з_точкою(маршрути, точка):
    return [маршрут for маршрут in маршрути if маршрут.старт == точка or маршрут.фініш == точка]


print("Усі маршрути:")
for маршрут in маршрути:
    print(маршрут)

print("\nМаршрути з максимальною кількістю привалів:")
for маршрут in маршрути_з_максимальною_кількістю_привалів(маршрути):
    print(маршрут)

print("\nМаршрут з найдовшим переходом:")
print(маршрут_з_найдовшим_переходом(маршрути))

точка = "Говерла"
print(f"\nМаршрути, що починаються або закінчуються в точці {точка}:")
for маршрут in маршрути_з_точкою(маршрути, точка):
    print(маршрут)
